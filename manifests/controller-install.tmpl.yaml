---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: __CONTROLLER_NAME__
rules:
  - apiGroups: ["resource.k8s.io"]
    resources: ["resourceclaims", "deviceclasses", "resourceslices"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["resource.k8s.io"]
    resources: ["resourceclaims/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: __CONTROLLER_NAME__
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: __CONTROLLER_NAME__
subjects:
- kind: ServiceAccount
  name: __CONTROLLER_NAME__
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: __CONTROLLER_NAME__
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __CONTROLLER_NAME__
  namespace: kube-system
  labels:
    k8s-app: __CONTROLLER_NAME__
spec:
  # The user requested 2 replicas for the controller.
  replicas: 2
  selector:
    matchLabels:
      k8s-app: __CONTROLLER_NAME__
  template:
    metadata:
      labels:
        k8s-app: __CONTROLLER_NAME__
    spec:
      serviceAccountName: __CONTROLLER_NAME__
      containers:
      - name: controller
        image: __CONTROLLER_IMAGE__:stable
        args:
        - /__CONTROLLER_BINARY__
        - --v=2
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"